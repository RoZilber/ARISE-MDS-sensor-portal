openapi: 3.0.3
info:
  title: Sensor portal API
  version: 0.7.5
  description: API for ARISE MDS Sensor portal
paths:
  /api/datafile/:
    get:
      operationId: datafile_list
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: query
        name: archived
        schema:
          type: boolean
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: deployment
        schema:
          type: integer
      - in: query
        name: deployment__deployment_device_ID
        schema:
          type: string
      - in: query
        name: deployment__deployment_device_ID__icontains
        schema:
          type: string
      - in: query
        name: deployment__deployment_device_ID__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: deployment__device
        schema:
          type: integer
      - in: query
        name: deployment__device__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: deployment__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device_type
        schema:
          type: integer
        description: device type
      - in: query
        name: extra_data
        schema:
          type: string
      - in: query
        name: favourite_of
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: favourite_of__contains
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: file_format
        schema:
          type: string
      - in: query
        name: file_format__icontains
        schema:
          type: string
      - in: query
        name: file_format__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: file_name
        schema:
          type: string
      - in: query
        name: file_name__icontains
        schema:
          type: string
      - in: query
        name: file_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: file_size__gte
        schema:
          type: integer
      - in: query
        name: file_size__lte
        schema:
          type: integer
      - in: query
        name: file_type
        schema:
          type: integer
      - in: query
        name: file_type__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: file_type__name
        schema:
          type: string
      - in: query
        name: file_type__name__icontains
        schema:
          type: string
      - in: query
        name: file_type__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: has_observations
        schema:
          type: boolean
        description: Has observations
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_favourite
        schema:
          type: boolean
        description: is favourite
      - in: query
        name: local_storage
        schema:
          type: boolean
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - in: query
        name: obs_type
        schema:
          type: string
          enum:
          - ai_only
          - all_obs
          - has_ai
          - has_human
          - human_only
          - no_human_obs
          - no_obs
        description: |-
          Observation type

          * `no_obs` - No observations
          * `no_human_obs` - No human observations
          * `all_obs` - All observations
          * `has_human` - Human observations
          * `has_ai` - AI observations
          * `human_only` - Human observations only
          * `ai_only` - AI observations only
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: original_name
        schema:
          type: string
      - in: query
        name: original_name__icontains
        schema:
          type: string
      - in: query
        name: original_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: recording_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: recording_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: recording_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: recording_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: recording_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: recording_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: recording_dt__time__gte
        schema:
          type: string
          format: time
      - in: query
        name: recording_dt__time__lte
        schema:
          type: string
          format: time
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: uncertain
        schema:
          type: string
          enum:
          - my_uncertain
          - no_uncertain
          - other_uncertain
          - uncertain
        description: |-
          Uncertain observations

          * `no_uncertain` - No uncertain observations
          * `uncertain` - Uncertain observations
          * `other_uncertain` - Other's uncertain observations
          * `my_uncertain` - My uncertain observations
      - in: query
        name: upload_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: upload_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: upload_dt__lte
        schema:
          type: string
          format: date-time
      tags:
      - datafile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataFileList'
          description: ''
    post:
      operationId: datafile_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFileUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFileUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFileUpload'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFileUpload'
          description: ''
  /api/datafile/{id}/:
    get:
      operationId: datafile_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data file.
        required: true
      tags:
      - datafile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    put:
      operationId: datafile_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data file.
        required: true
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    patch:
      operationId: datafile_partial_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data file.
        required: true
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataFile'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
    delete:
      operationId: datafile_destroy
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data file.
        required: true
      tags:
      - datafile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/datafile/{id}/favourite_file/:
    post:
      operationId: datafile_favourite_file_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data file.
        required: true
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /api/datafile/ids_count/:
    post:
      operationId: datafile_ids_count_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /api/datafile/queryset_count/:
    get:
      operationId: datafile_queryset_count_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - datafile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /api/datafile/start_job/{job_name}/:
    post:
      operationId: datafile_start_job_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: job_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - datafile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataFile'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFile'
          description: ''
  /api/datahandler/:
    get:
      operationId: datahandler_list
      tags:
      - datahandler
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataHandler'
          description: ''
  /api/datahandler/{id}/:
    get:
      operationId: datahandler_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - datahandler
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataHandler'
          description: ''
  /api/datapackage/:
    get:
      operationId: datapackage_list
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datapackage
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataPackageList'
          description: ''
    post:
      operationId: datapackage_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - datapackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
  /api/datapackage/{id}/:
    get:
      operationId: datapackage_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data package.
        required: true
      tags:
      - datapackage
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    put:
      operationId: datapackage_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data package.
        required: true
      tags:
      - datapackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPackage'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    patch:
      operationId: datapackage_partial_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data package.
        required: true
      tags:
      - datapackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataPackage'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPackage'
          description: ''
    delete:
      operationId: datapackage_destroy
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data package.
        required: true
      tags:
      - datapackage
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/datastorageinput/:
    get:
      operationId: datastorageinput_list
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
        description: Project ID
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datastorageinput
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataStorageInputList'
          description: ''
    post:
      operationId: datastorageinput_create
      tags:
      - datastorageinput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorageInput'
          description: ''
  /api/datastorageinput/{id}/:
    get:
      operationId: datastorageinput_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data storage input.
        required: true
      tags:
      - datastorageinput
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorageInput'
          description: ''
    put:
      operationId: datastorageinput_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data storage input.
        required: true
      tags:
      - datastorageinput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataStorageInput'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorageInput'
          description: ''
    patch:
      operationId: datastorageinput_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data storage input.
        required: true
      tags:
      - datastorageinput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataStorageInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataStorageInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataStorageInput'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStorageInput'
          description: ''
    delete:
      operationId: datastorageinput_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data storage input.
        required: true
      tags:
      - datastorageinput
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/datatype/:
    get:
      operationId: datatype_list
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: device_type
        schema:
          type: boolean
        description: device_type
      - in: query
        name: file_type
        schema:
          type: boolean
        description: file_type
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - datatype
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataTypeList'
          description: ''
  /api/datatype/{id}/:
    get:
      operationId: datatype_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this data type.
        required: true
      tags:
      - datatype
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataType'
          description: ''
  /api/deployment/:
    get:
      operationId: deployment_list
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: deployment_device_ID
        schema:
          type: string
      - in: query
        name: deployment_device_ID__icontains
        schema:
          type: string
      - in: query
        name: deployment_device_ID__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: deployment_end
        schema:
          type: string
          format: date-time
      - in: query
        name: deployment_end__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deployment_end__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: deployment_start
        schema:
          type: string
          format: date-time
      - in: query
        name: deployment_start__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deployment_start__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: device
        schema:
          type: integer
      - in: query
        name: device__device_ID
        schema:
          type: string
      - in: query
        name: device__device_ID__icontains
        schema:
          type: string
      - in: query
        name: device__device_ID__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device__name
        schema:
          type: string
      - in: query
        name: device__name__icontains
        schema:
          type: string
      - in: query
        name: device__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device_type
        schema:
          type: integer
      - in: query
        name: device_type__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device_type__name
        schema:
          type: string
      - in: query
        name: device_type__name__icontains
        schema:
          type: string
      - in: query
        name: device_type__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: extra_data
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: in_bbox
        required: false
        in: query
        description: 'Specify a bounding box as filter: in_bbox=min_lon,min_lat,max_lon,max_lat'
        schema:
          type: array
          items:
            type: float
          minItems: 4
          maxItems: 4
          example:
          - 0
          - 0
          - 10
          - 10
        style: form
        explode: false
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: project__project_ID
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: site
        schema:
          type: integer
      - in: query
        name: site__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: site__name
        schema:
          type: string
      - in: query
        name: site__name__icontains
        schema:
          type: string
      - in: query
        name: site__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: site__short_name
        schema:
          type: string
      - in: query
        name: site__short_name__icontains
        schema:
          type: string
      - in: query
        name: site__short_name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      tags:
      - deployment
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeploymentList'
          description: ''
    post:
      operationId: deployment_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/deployment/{id}/:
    get:
      operationId: deployment_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployment
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    put:
      operationId: deployment_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    patch:
      operationId: deployment_partial_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeployment'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
    delete:
      operationId: deployment_destroy
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployment
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/deployment/{id}/metrics/:
    get:
      operationId: deployment_metrics_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this deployment.
        required: true
      tags:
      - deployment
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/deployment/ids_count/:
    post:
      operationId: deployment_ids_count_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/deployment/queryset_count/:
    get:
      operationId: deployment_queryset_count_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - deployment
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/deployment/start_job/{job_name}/:
    post:
      operationId: deployment_start_job_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: job_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Deployment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
  /api/device/:
    get:
      operationId: device_list
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: device_ID
        schema:
          type: string
      - in: query
        name: device_ID__icontains
        schema:
          type: string
      - in: query
        name: device_ID__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: device_type
        schema:
          type: integer
        description: device type
      - in: query
        name: extra_data
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: model__name
        schema:
          type: string
      - in: query
        name: model__name__icontains
        schema:
          type: string
      - in: query
        name: model__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: integer
      - in: query
        name: type__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: type__name
        schema:
          type: string
      - in: query
        name: type__name__icontains
        schema:
          type: string
      - in: query
        name: type__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      tags:
      - device
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceList'
          description: ''
    post:
      operationId: device_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/device/{id}/:
    get:
      operationId: device_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    put:
      operationId: device_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    patch:
      operationId: device_partial_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    delete:
      operationId: device_destroy
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/device/{id}/metrics/:
    get:
      operationId: device_metrics_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/device/ids_count/:
    post:
      operationId: device_ids_count_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/device/queryset_count/:
    get:
      operationId: device_queryset_count_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - device
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/device/start_job/{job_name}/:
    post:
      operationId: device_start_job_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: job_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/devicemodel/:
    get:
      operationId: devicemodel_list
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: extra_data
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: integer
      - in: query
        name: type__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: type__name
        schema:
          type: string
      - in: query
        name: type__name__icontains
        schema:
          type: string
      - in: query
        name: type__name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      tags:
      - devicemodel
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceModelList'
          description: ''
  /api/devicemodel/{id}/:
    get:
      operationId: devicemodel_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device model.
        required: true
      tags:
      - devicemodel
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceModel'
          description: ''
  /api/genericjob/:
    get:
      operationId: genericjob_list
      tags:
      - genericjob
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericJob'
          description: ''
  /api/genericjob/{id}/:
    get:
      operationId: genericjob_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - genericjob
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericJob'
          description: ''
  /api/observation/:
    get:
      operationId: observation_list
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: data_files
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: extra_data
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - observation
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservationList'
          description: ''
    post:
      operationId: observation_create
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      tags:
      - observation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
  /api/observation/{id}/:
    get:
      operationId: observation_retrieve
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - observation
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    put:
      operationId: observation_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - observation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Observation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Observation'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    patch:
      operationId: observation_partial_update
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - observation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservation'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
          description: ''
    delete:
      operationId: observation_destroy
      description: |-
        Viewset mixin to call a check_attachment function on create and update.

        check_attachment should be overriden inside the inheriting viewset.

        IMPORTANT: Make sure this is first class inherited, otherwise the object can be created
        before a check is made.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - observation
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/password_reset/:
    post:
      operationId: password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/password_reset/confirm/:
    post:
      operationId: password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/password_reset/validate_token/:
    post:
      operationId: password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /api/project/:
    get:
      operationId: project_list
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: modified_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_before
        schema:
          type: string
          format: date
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: organisation
        schema:
          type: string
      - in: query
        name: organisation__icontains
        schema:
          type: string
      - in: query
        name: organisation__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project_ID
        schema:
          type: string
      - in: query
        name: project_ID__icontains
        schema:
          type: string
      - in: query
        name: project_ID__in
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: project_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/{id}/:
    get:
      operationId: project_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: project_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: project_partial_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: project_destroy
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/project/{id}/metrics/:
    get:
      operationId: project_metrics_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/{id}/species_list/:
    get:
      operationId: project_species_list_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/ids_count/:
    post:
      operationId: project_ids_count_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/queryset_count/:
    get:
      operationId: project_queryset_count_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - project
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/start_job/{job_name}/:
    post:
      operationId: project_start_job_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: job_name
        schema:
          type: string
          pattern: ^\w+$
        required: true
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/sequence/:
    get:
      operationId: sequence_list
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - sequence
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSequenceList'
          description: ''
    post:
      operationId: sequence_create
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      tags:
      - sequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sequence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sequence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sequence'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
          description: ''
  /api/sequence/{id}/:
    get:
      operationId: sequence_retrieve
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - sequence
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
          description: ''
    put:
      operationId: sequence_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - sequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sequence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sequence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sequence'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
          description: ''
    patch:
      operationId: sequence_partial_update
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - sequence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSequence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSequence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSequence'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
          description: ''
    delete:
      operationId: sequence_destroy
      description: |-
        By default, paginate_queryset returns None when no paginator is set. This extends
        it to also return None if no 'page' query param is set
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this observation.
        required: true
      tags:
      - sequence
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/site/:
    get:
      operationId: site_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - site
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSiteList'
          description: ''
  /api/site/{id}/:
    get:
      operationId: site_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - site
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
  /api/taxon/:
    get:
      operationId: taxon_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - taxon
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEvenShorterTaxonSerialierList'
          description: ''
  /api/taxon/{id}/:
    get:
      operationId: taxon_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this taxon.
        required: true
      tags:
      - taxon
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvenShorterTaxonSerialier'
          description: ''
  /api/timezones:
    get:
      operationId: timezones_retrieve
      description: Return all timezones.
      tags:
      - timezones
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/:
    get:
      operationId: user_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: id__not_in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/userprofile/:
    get:
      operationId: userprofile_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: id__not_in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - userprofile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /api/userprofile/{id}/:
    get:
      operationId: userprofile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - userprofile
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
components:
  schemas:
    DataFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        deployment:
          type: string
        deployment_ID:
          type: integer
        file_type:
          type: string
          readOnly: true
        recording_dt:
          type: string
          format: date-time
        file_name:
          type: string
          maxLength: 150
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        file_format:
          type: string
          maxLength: 10
        upload_dt:
          type: string
          format: date-time
        path:
          type: string
          maxLength: 500
        extra_data: {}
        linked_files: {}
        thumb_url:
          type: string
          nullable: true
          maxLength: 500
        original_name:
          type: string
          nullable: true
          maxLength: 100
        file_url:
          type: string
          nullable: true
          maxLength: 500
        tag:
          type: string
          nullable: true
          maxLength: 250
        has_human:
          type: boolean
          default: false
      required:
      - created_on
      - file_format
      - file_name
      - file_size
      - file_type
      - id
      - modified_on
      - path
      - recording_dt
    DataFileUpload:
      type: object
      properties:
        device:
          type: string
        device_ID:
          type: integer
        deployment:
          type: string
        deployment_ID:
          type: integer
        files:
          type: array
          items:
            type: string
            format: uri
        file_names:
          type: array
          items:
            type: string
        extra_data:
          type: array
          items: {}
        recording_dt:
          type: array
          items:
            type: string
            format: date-time
        autoupdate:
          type: boolean
          default: false
        rename:
          type: boolean
          default: true
        check_filename:
          type: boolean
          default: true
        data_types:
          type: array
          items:
            type: string
        is_active:
          type: boolean
          readOnly: true
      required:
      - files
      - is_active
    DataHandler:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data_types:
          type: array
          items:
            type: string
            maxLength: 100
        device_models:
          type: array
          items:
            type: string
            maxLength: 100
        safe_formats:
          type: array
          items:
            type: string
            maxLength: 10
        full_name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 100
        validity_description:
          type: string
          maxLength: 500
        handling_description:
          type: string
          maxLength: 500
        post_handling_description:
          type: string
          maxLength: 500
      required:
      - data_types
      - description
      - device_models
      - full_name
      - handling_description
      - id
      - post_handling_description
      - safe_formats
      - validity_description
    DataPackage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        status_id:
          type: integer
          writeOnly: true
        status:
          type: string
          readOnly: true
        medatatype_id:
          type: integer
          writeOnly: true
        metadatatype:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        metadata_type:
          allOf:
          - $ref: '#/components/schemas/MetadataTypeEnum'
          default: 0
          minimum: -2147483648
          maximum: 2147483647
        includes_files:
          type: boolean
          default: true
        file_url:
          type: string
          nullable: true
          maxLength: 500
      required:
      - created_on
      - id
      - medatatype_id
      - metadatatype
      - modified_on
      - name
      - owner
      - status
      - status_id
    DataStorageInput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        name:
          type: string
          maxLength: 20
        address:
          type: string
          maxLength: 100
      required:
      - address
      - created_on
      - id
      - modified_on
      - name
      - owner
    DataType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 20
        colour:
          type: string
          default: '#FFFFFF'
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        symbol:
          type: string
          maxLength: 255
      required:
      - created_on
      - id
      - modified_on
      - name
    Deployment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        device_type:
          type: string
          nullable: true
        device_type_ID:
          type: integer
          nullable: true
        device:
          type: string
        device_ID:
          type: integer
        project:
          type: array
          items:
            type: string
            nullable: true
        project_ID:
          type: array
          items:
            type: integer
            nullable: true
        site:
          type: string
          nullable: true
        site_ID:
          type: integer
          nullable: true
        time_zone:
          type: string
        deployment_start:
          type: string
          format: date-time
          default: '2025-05-22T07:25:11.366142Z'
        deployment_end:
          type: string
          format: date-time
          nullable: true
        deployment_device_ID:
          type: string
          readOnly: true
        deployment_ID:
          type: string
          maxLength: 80
        device_n:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,6})?$
          nullable: true
        extra_data: {}
        is_active:
          type: boolean
          default: true
        combo_project:
          type: string
          readOnly: true
          nullable: true
        thumb_url:
          type: string
          readOnly: true
          nullable: true
      required:
      - combo_project
      - created_on
      - deployment_ID
      - deployment_device_ID
      - id
      - modified_on
      - owner
      - thumb_url
      - time_zone
    Device:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        type:
          type: string
        type_ID:
          type: integer
        model:
          type: string
        model_ID:
          type: integer
        username:
          type: string
        password:
          type: string
          writeOnly: true
        is_active:
          type: boolean
          readOnly: true
        device_ID:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 50
        autoupdate:
          type: boolean
          default: false
        update_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 48
        extra_data: {}
        input_storage:
          type: integer
          nullable: true
      required:
      - created_on
      - device_ID
      - id
      - is_active
      - modified_on
      - owner
    DeviceModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          readOnly: true
        type:
          type: string
        type_ID:
          type: integer
        name:
          type: string
          maxLength: 50
        manufacturer:
          type: string
          maxLength: 50
        colour:
          type: string
          default: ''
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
        symbol:
          type: string
          maxLength: 255
      required:
      - created_on
      - id
      - modified_on
      - owner
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    EvenShorterTaxonSerialier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        species_name:
          type: string
          maxLength: 100
        species_common_name:
          type: string
          maxLength: 100
        taxon_source:
          allOf:
          - $ref: '#/components/schemas/TaxonSourceEnum'
          default: 0
          minimum: -2147483648
          maximum: 2147483647
      required:
      - id
      - species_name
    GenericJob:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        task_name:
          type: string
        data_type:
          type: string
        admin_only:
          type: boolean
        max_items:
          type: integer
        default_args: {}
      required:
      - admin_only
      - data_type
      - default_args
      - id
      - max_items
      - name
      - task_name
    MetadataTypeEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - base
        * `1` - Camera trap DP
        * `2` - COCO
    MyTokenObtainPair:
      type: object
      properties:
        recaptcha:
          type: string
          writeOnly: true
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - recaptcha
      - username
    Observation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        taxon_obj:
          allOf:
          - $ref: '#/components/schemas/ShortTaxon'
          readOnly: true
        taxon:
          type: integer
        species_name:
          type: string
          nullable: true
        label:
          type: string
          readOnly: true
        obs_dt:
          type: string
          format: date-time
          nullable: true
        source:
          type: string
          default: human
          maxLength: 100
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        bounding_box: {}
        confidence:
          type: number
          format: double
          nullable: true
        extra_data: {}
        sex:
          type: string
          maxLength: 10
        lifestage:
          type: string
          maxLength: 15
        behavior:
          type: string
          maxLength: 50
        validation_requested:
          type: boolean
          default: false
        data_files:
          type: array
          items:
            type: integer
        validation_of:
          type: array
          items:
            type: integer
      required:
      - created_on
      - data_files
      - id
      - label
      - modified_on
      - owner
      - taxon_obj
    PaginatedDataFileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataFile'
    PaginatedDataPackageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataPackage'
    PaginatedDataStorageInputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataStorageInput'
    PaginatedDataTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataType'
    PaginatedDeploymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
    PaginatedDeviceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    PaginatedDeviceModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceModel'
    PaginatedEvenShorterTaxonSerialierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EvenShorterTaxonSerialier'
    PaginatedObservationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedSequenceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
    PaginatedSiteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Site'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedDataFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        deployment:
          type: string
        deployment_ID:
          type: integer
        file_type:
          type: string
          readOnly: true
        recording_dt:
          type: string
          format: date-time
        file_name:
          type: string
          maxLength: 150
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        file_format:
          type: string
          maxLength: 10
        upload_dt:
          type: string
          format: date-time
        path:
          type: string
          maxLength: 500
        extra_data: {}
        linked_files: {}
        thumb_url:
          type: string
          nullable: true
          maxLength: 500
        original_name:
          type: string
          nullable: true
          maxLength: 100
        file_url:
          type: string
          nullable: true
          maxLength: 500
        tag:
          type: string
          nullable: true
          maxLength: 250
        has_human:
          type: boolean
          default: false
    PatchedDataPackage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        status_id:
          type: integer
          writeOnly: true
        status:
          type: string
          readOnly: true
        medatatype_id:
          type: integer
          writeOnly: true
        metadatatype:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        metadata_type:
          allOf:
          - $ref: '#/components/schemas/MetadataTypeEnum'
          default: 0
          minimum: -2147483648
          maximum: 2147483647
        includes_files:
          type: boolean
          default: true
        file_url:
          type: string
          nullable: true
          maxLength: 500
    PatchedDataStorageInput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        name:
          type: string
          maxLength: 20
        address:
          type: string
          maxLength: 100
    PatchedDeployment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        device_type:
          type: string
          nullable: true
        device_type_ID:
          type: integer
          nullable: true
        device:
          type: string
        device_ID:
          type: integer
        project:
          type: array
          items:
            type: string
            nullable: true
        project_ID:
          type: array
          items:
            type: integer
            nullable: true
        site:
          type: string
          nullable: true
        site_ID:
          type: integer
          nullable: true
        time_zone:
          type: string
        deployment_start:
          type: string
          format: date-time
          default: '2025-05-22T07:25:11.366142Z'
        deployment_end:
          type: string
          format: date-time
          nullable: true
        deployment_device_ID:
          type: string
          readOnly: true
        deployment_ID:
          type: string
          maxLength: 80
        device_n:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,6})?$
          nullable: true
        extra_data: {}
        is_active:
          type: boolean
          default: true
        combo_project:
          type: string
          readOnly: true
          nullable: true
        thumb_url:
          type: string
          readOnly: true
          nullable: true
    PatchedDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        type:
          type: string
        type_ID:
          type: integer
        model:
          type: string
        model_ID:
          type: integer
        username:
          type: string
        password:
          type: string
          writeOnly: true
        is_active:
          type: boolean
          readOnly: true
        device_ID:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 50
        autoupdate:
          type: boolean
          default: false
        update_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 48
        extra_data: {}
        input_storage:
          type: integer
          nullable: true
    PatchedObservation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        taxon_obj:
          allOf:
          - $ref: '#/components/schemas/ShortTaxon'
          readOnly: true
        taxon:
          type: integer
        species_name:
          type: string
          nullable: true
        label:
          type: string
          readOnly: true
        obs_dt:
          type: string
          format: date-time
          nullable: true
        source:
          type: string
          default: human
          maxLength: 100
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        bounding_box: {}
        confidence:
          type: number
          format: double
          nullable: true
        extra_data: {}
        sex:
          type: string
          maxLength: 10
        lifestage:
          type: string
          maxLength: 15
        behavior:
          type: string
          maxLength: 50
        validation_requested:
          type: boolean
          default: false
        data_files:
          type: array
          items:
            type: integer
        validation_of:
          type: array
          items:
            type: integer
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        project_ID:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 50
        objectives:
          type: string
          maxLength: 500
        principal_investigator:
          type: string
          maxLength: 50
        principal_investigator_email:
          type: string
          maxLength: 100
        contact:
          type: string
          maxLength: 50
        contact_email:
          type: string
          maxLength: 100
        organisation:
          type: string
          maxLength: 100
        clean_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 90
        archive:
          type: integer
          nullable: true
        data_storages:
          type: array
          items:
            type: integer
        automated_tasks:
          type: array
          items:
            type: integer
    PatchedSequence:
      type: object
      properties:
        eventID:
          type: string
        mediaCount:
          type: integer
        eventStart:
          type: string
        eventEnd:
          type: string
        mediaID:
          type: array
          items:
            type: string
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          readOnly: true
        managers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        managers_ID:
          type: array
          items:
            type: integer
        annotators:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        annotators_ID:
          type: array
          items:
            type: integer
        viewers:
          type: array
          items:
            type: string
            description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
            nullable: true
        viewers_ID:
          type: array
          items:
            type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        project_ID:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 50
        objectives:
          type: string
          maxLength: 500
        principal_investigator:
          type: string
          maxLength: 50
        principal_investigator_email:
          type: string
          maxLength: 100
        contact:
          type: string
          maxLength: 50
        contact_email:
          type: string
          maxLength: 100
        organisation:
          type: string
          maxLength: 100
        clean_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 90
        archive:
          type: integer
          nullable: true
        data_storages:
          type: array
          items:
            type: integer
        automated_tasks:
          type: array
          items:
            type: integer
      required:
      - created_on
      - id
      - is_active
      - modified_on
      - name
      - owner
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Sequence:
      type: object
      properties:
        eventID:
          type: string
        mediaCount:
          type: integer
        eventStart:
          type: string
        eventEnd:
          type: string
        mediaID:
          type: array
          items:
            type: string
      required:
      - eventEnd
      - eventID
      - eventStart
      - mediaCount
      - mediaID
    ShortTaxon:
      type: object
      properties:
        taxonomic_level_name:
          type: string
          readOnly: true
        species_name:
          type: string
          maxLength: 100
        species_common_name:
          type: string
          maxLength: 100
        taxon_code:
          type: string
          maxLength: 100
        taxon_source:
          allOf:
          - $ref: '#/components/schemas/TaxonSourceEnum'
          default: 0
          minimum: -2147483648
          maximum: 2147483647
        extra_data: {}
        taxonomic_level:
          allOf:
          - $ref: '#/components/schemas/TaxonomicLevelEnum'
          default: 0
          minimum: -2147483648
          maximum: 2147483647
      required:
      - species_name
      - taxonomic_level_name
    Site:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        modified_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 50
        short_name:
          type: string
          maxLength: 10
      required:
      - created_on
      - id
      - modified_on
      - name
    TaxonSourceEnum:
      enum:
      - 0
      - 1
      type: integer
      description: |-
        * `0` - custom
        * `1` - GBIF
    TaxonomicLevelEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `0` - species
        * `1` - genus
        * `2` - family
        * `3` - order
        * `4` - class
        * `5` - phylum
        * `6` - kingdom
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 200
        organisation:
          type: string
          maxLength: 100
        recaptcha:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - id
      - password
      - recaptcha
      - username
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 200
        organisation:
          type: string
          maxLength: 100
        owned_projects:
          type: array
          items:
            type: string
          readOnly: true
        owned_projects_ID:
          type: array
          items:
            type: integer
          readOnly: true
        managed_projects:
          type: array
          items:
            type: string
          readOnly: true
        managed_projects_ID:
          type: array
          items:
            type: integer
          readOnly: true
        annotatable_projects:
          type: array
          items:
            type: string
          readOnly: true
        annotatable_projects_ID:
          type: array
          items:
            type: integer
          readOnly: true
        viewable_projects:
          type: array
          items:
            type: string
          readOnly: true
        viewable_projects_ID:
          type: array
          items:
            type: integer
          readOnly: true
        owned_devices:
          type: array
          items:
            type: string
          readOnly: true
        owned_devices_ID:
          type: array
          items:
            type: integer
          readOnly: true
        managed_devices:
          type: array
          items:
            type: string
          readOnly: true
        managed_devices_ID:
          type: array
          items:
            type: integer
          readOnly: true
        annotatable_devices:
          type: array
          items:
            type: string
          readOnly: true
        annotatable_devices_ID:
          type: array
          items:
            type: integer
          readOnly: true
        viewable_devices:
          type: array
          items:
            type: string
          readOnly: true
        viewable_devices_ID:
          type: array
          items:
            type: integer
          readOnly: true
        owned_deployments:
          type: array
          items:
            type: string
          readOnly: true
        owned_deployments_ID:
          type: array
          items:
            type: integer
          readOnly: true
        managed_deployments:
          type: array
          items:
            type: string
          readOnly: true
        managed_deployments_ID:
          type: array
          items:
            type: integer
          readOnly: true
        annotatable_deployments:
          type: array
          items:
            type: string
          readOnly: true
        annotatable_deployments_ID:
          type: array
          items:
            type: integer
          readOnly: true
        viewable_deployments:
          type: array
          items:
            type: string
          readOnly: true
        viewable_deployments_ID:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - annotatable_deployments
      - annotatable_deployments_ID
      - annotatable_devices
      - annotatable_devices_ID
      - annotatable_projects
      - annotatable_projects_ID
      - id
      - managed_deployments
      - managed_deployments_ID
      - managed_devices
      - managed_devices_ID
      - managed_projects
      - managed_projects_ID
      - owned_deployments
      - owned_deployments_ID
      - owned_devices
      - owned_devices_ID
      - owned_projects
      - owned_projects_ID
      - username
      - viewable_deployments
      - viewable_deployments_ID
      - viewable_devices
      - viewable_devices_ID
      - viewable_projects
      - viewable_projects_ID
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
